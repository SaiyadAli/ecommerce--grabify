<%- include('../partials/authheader.ejs') %>
<body data-fx-mode="light">
    <main class="wrapper sb-default">
        <section class="auth-section anim">
            <div class="fx-login-page">
                <div class="container-fluid no-gutters">
                    <div class="row">
                        <div class="offset-lg-6 col-lg-6">
                            <div class="content-detail">
                                <div class="main-info">
                                    <div class="hero-container">
                                        <!-- Forgot Password Form -->
                                        <form id="forgotPasswordForm" class="forgot-form" method="post" action="/user/reset-password">
                                            <div class="imgcontainer">
                                                <a href="index.html"><img src="/assets/grabifylogo.png" alt="logo" class="logo"></a>
                                            </div>
                                            <div class="input-control">
                                                <h6>Reset Your Password</h6>
                                                <% if (message) { %>
                                                    <div class="alert alert-danger" role="alert">
                                                        <%= message %>
                                                    </div>
                                                <% } %>
                                                <input type="email" id="email" name="email" placeholder="Enter Email" required>
                                                <input type="password" id="newPassword" name="newPassword" placeholder="Enter New Password" required>
                                                <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm New Password" required>
                                                <input type="text" id="otp" name="otp" placeholder="Enter OTP" required style="display: none;">
                                                
                                                <div id="timer" class="timer" style="display: none;">15</div>
                                                <div id="otpButtons" class="otp-buttons" style="display: flex; justify-content: space-between; align-items: center;">
                                                    <button type="button" id="sendOtpButton" class="btn btn-primary" onclick="sendOtp()">Send OTP</button>
                                                    <button type="button" id="resendButton" class="btn btn-primary" onclick="resendOtp()" style="display: none;">Resend OTP</button>
                                                    <button type="submit" class="btn btn-primary" style="display: none;" id="resetPasswordButton">Reset Password</button>
                                                </div>
                                                
                                                <div class="login-with-btns">
                                                    <span class="already-acc">Return to <a href="/user/login" class="login-btn">Login</a></span>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <%- include('../partials/authfooter.ejs') %>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Timer countdown (15 seconds)
        let countdown = 15;
        const timerElement = document.getElementById('timer');
        const resendButton = document.getElementById('resendButton');
        const sendOtpButton = document.getElementById('sendOtpButton');
        const otpInput = document.getElementById('otp');
        const resetPasswordButton = document.getElementById('resetPasswordButton');

        function startTimer() {
            const interval = setInterval(function() {
                if (countdown > 0) {
                    countdown--;
                    timerElement.textContent = countdown;
                } else {
                    clearInterval(interval);
                    resendButton.style.display = 'inline-block'; // Show resend OTP button after timer ends
                }
            }, 1000);
        }

        // Function to send OTP
        function sendOtp() {
            const email = document.getElementById('email').value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(email)) {
                Swal.fire('Error', 'Please enter a valid email address.', 'error');
                return;
            }

            // Call an API endpoint to send the OTP
            fetch('/user/resend-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success', 'OTP has been sent to your email.', 'success');
                    countdown = 15; // Reset timer
                    resendButton.style.display = 'none'; // Hide resend button while waiting
                    sendOtpButton.style.display = 'none'; // Hide send OTP button
                    otpInput.style.display = 'block'; // Show OTP input
                    resetPasswordButton.style.display = 'inline-block'; // Show reset password button
                    timerElement.style.display = 'block'; // Show timer
                    startTimer(); // Start timer
                } else {
                    Swal.fire('Error', 'Email is not registered..', 'error');
                }
            })
            .catch(err => {
                Swal.fire('Error', 'Error sending OTP. Please try again.', 'error');
            });
        }

        // Function to resend OTP
        function resendOtp() {
            const email = document.getElementById('email').value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(email)) {
                Swal.fire('Error', 'Please enter a valid email address.', 'error');
                return;
            }

            // Call an API endpoint to resend the OTP
            fetch('/user/resend-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success', 'OTP has been resent to your email.', 'success');
                    countdown = 15; // Reset timer
                    resendButton.style.display = 'none'; // Hide resend button while waiting
                    startTimer(); // Restart timer
                } else {
                    Swal.fire('Error', 'Email is not registered.', 'error');
                }
            })
            .catch(err => {
                Swal.fire('Error', 'Error resending OTP. Please try again.', 'error');
            });
        }

        document.getElementById('forgotPasswordForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const email = document.getElementById('email').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const otp = document.getElementById('otp').value;

            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(email)) {
                Swal.fire('Error', 'Please enter a valid email address.', 'error');
                return;
            }
            if (newPassword !== confirmPassword) {
                Swal.fire('Error', 'New Password and Confirm Password should match.', 'error');
                return;
            }

            fetch('/user/reset-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, newPassword, confirmPassword, otp })
            }).then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Your password has been updated successfully!',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/user/login';
                        }
                    });
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            }).catch(error => {
                Swal.fire('Error', 'An error occurred while updating your password.', 'error');
            });
        });
    </script>
</body>