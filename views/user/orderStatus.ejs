<%- include('../partials/grabifyheader.ejs') %>

<div class="container main-container headerOffset">
    <div class="row">
        <div class="breadcrumbDiv col-lg-12">
            <ul class="breadcrumb">
                <li><a href="/user/home">Home</a></li>
                <li><a href="/user/order">Order List</a></li>
                <li class="active"> Order Status</li>
            </ul>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <h1 class="section-title-inner"><span><i class="fa fa-info-circle"></i> Order Status </span></h1>

            <div class="row userInfo">
                <div class="col-xs-12 col-sm-12">
                    <h2 class="block-title-2"> Order Details </h2>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Order Number</th>
                                <th>Order Date</th>
                                <th>Payment Type</th>
                                <th>Order Status</th>
                                <th>Grand Total</th>
                                <th>Delivery Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>#<%= order.orderNumber %></td>
                                <td><%= order.orderDate.toLocaleDateString() %></td>
                                <td><%= order.paymentType %></td>
                                <td><%= order.orderStatus %></td>
                                <td>₹<%= order.grandTotalCost %></td>
                                <td><%= order.deliveryDate ? order.deliveryDate.toLocaleDateString() : 'N/A' %></td>
                            </tr>
                        </tbody>
                    </table>

                    <% if (address) { %>
                        <h2 class="block-title-2"> Billing Address </h2>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Street</th>
                                    <th>City</th>
                                    <th>State</th>
                                    <th>Country</th>
                                    <th>Pincode</th>
                                    <th>Mobile</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><%= address?.firstName %> <%= address?.lastName %></td>
                                    <td><%= address?.street %></td>
                                    <td><%= address?.city %></td>
                                    <td><%= address?.state %></td>
                                    <td><%= address?.country %></td>
                                    <td><%= address?.pincode %></td>
                                    <td><%= address?.number %></td>
                                </tr>
                            </tbody>
                        </table>
                    <% } %>

                    <h2 class="block-title-2"> Products </h2>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Variant Color</th>
                                <th>Quantity</th>
                                <th>Size</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% order.cartData.forEach(item => { %>
                                <tr>
                                    <td><%= item.productName %></td>
                                    <td><%= item.variantColor %></td>
                                    <td><%= item.quantity %></td>
                                    <td><%= item.size %></td>
                                    <td>₹<%= item.price %></td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>

                    <% if (order.orderStatus !== 'Cancelled' && order.orderStatus !== 'Delivered' ) { %>
                        <div style="display: flex; gap: 10px;">
                            <form id="cancelOrderForm" action="/user/cancel-order/<%= order._id %>" method="POST">
                                <button type="button" id="cancelOrderButton" class="btn btn-danger">Cancel Order</button>
                            </form>
                            <% if (order.paymentType === 'Pay Later') { %>
                                <form id="retryPaymentForm" action="/user/retry-payment/<%= order._id %>" method="POST">
                                    <button type="button" id="retryPaymentButton" class="btn btn-warning">Retry Payment</button>
                                </form>
                            <% } %>
                        </div>
                    <% } %>
                       
                  

                    <% if (order.orderStatus === 'Delivered') { %>
                        <a href="/user/download-invoice/<%= order._id %>" class="btn btn-info" style="margin-top: 20px;">Download Invoice</a>
                    <% } %>
                </div>
            </div>
            <!--/row end-->

        </div>
    </div>
    <!--/row-->

    <div style="clear:both"></div>
</div>
<!-- /main-container -->

<div class="gap"></div>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('cancelOrderButton').addEventListener('click', function() {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to cancel this order?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('cancelOrderForm').submit();
            }
        });
    });

    document.getElementById('retryPaymentButton').addEventListener('click', function() {
        Swal.fire({
            title: 'Retry Payment',
            text: "Do you want to retry the payment for this order?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, retry it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/user/retry-payment/<%= order._id %>', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const options = {
                            key: 'rzp_test_3TZZC2O6tszKWO',
                            amount: data.amount,
                            currency: 'INR',
                            name: 'Grabify',
                            description: 'Order Payment',
                            order_id: data.orderId,
                            handler: function (response) {
                                fetch('/user/create-and-verify-order-razorpay', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        paymentId: response.razorpay_payment_id,
                                        orderId: response.razorpay_order_id,
                                        signature: response.razorpay_signature
                                    })
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Payment Successful',
                                            text: 'Your order has been placed successfully.',
                                            confirmButtonText: 'OK'
                                        }).then(() => {
                                            window.location.href = '/user/home';
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Payment Failed',
                                            text: data.message
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An error occurred while verifying the payment: ' + error.message
                                    }).then(() => {
                                        window.location.href = '/user/order';
                                    });
                                });
                            },
                            prefill: {
                                name: data.userName,
                                email: data.userEmail,
                                contact: data.userContact
                            },
                            theme: {
                                color: '#F37254'
                            },
                            modal: {
                                ondismiss: function() {
                                    fetch('/user/create-order-pay-later', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            chosenAddress: '<%= order.addressChosen %>',
                                            paymentType: 'Pay Later',
                                            couponCode: '<%= order.couponCode %>',
                                            walletDeduction: '<%= order.walletDeduction %>'
                                        })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Payment Failed',
                                                text: 'Order created with payment pending. Please complete the payment from your orders page.'
                                            }).then(() => {
                                                window.location.href = '/user/order';
                                            });
                                        } else {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Payment Failed',
                                                text: 'Payment verification failed. Please try again from your orders page.'
                                            }).then(() => {
                                                window.location.href = '/user/order';
                                            });
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: 'An error occurred while creating the order: ' + error.message
                                        });
                                    });
                                }
                            }
                        };
                        const rzp = new Razorpay(options);
                        rzp.open();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while retrying the payment: ' + error.message
                    });
                });
            }
        });
    });
</script>

<%- include('../partials/grabifyfooter.ejs') %>