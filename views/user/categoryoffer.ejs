<%- include('../partials/header.ejs') %>
<%- include('../partials/navbar.ejs') %>
<%- include('../partials/topnavigation.ejs') %>

<div class="container-fluid">
    <!-- Title -->
    <div class="d-flex justify-content-between align-items-center py-3">
        <h2 class="h5">Category Offer Management</h2>
        <button class="btn btn-primary" data-toggle="modal" data-target="#newCategoryOfferModal">Add New Category Offer</button>
    </div>

    <!-- Table -->
    <div class="card mb-4">
        <div class="card-body">
            <table class="table table-striped align-middle datatables">
                <thead>
                    <tr>
                        <th>Category Name</th>
                        <th>Offer Percentage</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% offers.forEach(offer => { %>
                        <tr>
                            <td><%= offer.categoryId.name %></td>
                            <td><%= offer.categoryOfferPercentage %>%</td>
                            <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                            <td><%= new Date(offer.endDate).toLocaleDateString() %></td>
                            <td><%= offer.currentStatus ? 'Active' : 'Inactive' %></td>
                            <td>
                                <i class="bi bi-pencil-square text-primary edit-category-offer-icon" data-toggle="modal" data-target="#editCategoryOfferModal<%= offer._id %>" style="cursor: pointer; margin-right: 10px;"></i>
                                <i class="bi bi-trash text-danger delete-category-offer-icon" data-offer-id="<%= offer._id %>" style="cursor: pointer;"></i>
                            </td>
                        </tr>

                        <!-- Edit Category Offer Modal -->
                        <div class="modal fade" id="editCategoryOfferModal<%= offer._id %>" tabindex="-1" role="dialog" aria-labelledby="editCategoryOfferModalLabel<%= offer._id %>" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editCategoryOfferModalLabel<%= offer._id %>">Edit Category Offer</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <form id="editCategoryOfferForm<%= offer._id %>" action="/admin/category-offers/edit/<%= offer._id %>" method="POST">
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label for="categoryId">Category</label>
                                                <select class="form-control" name="categoryId" required disabled>
                                                    <% categories.forEach(category => { %>
                                                        <option value="<%= category._id %>" <%= offer.categoryId._id.equals(category._id) ? 'selected' : '' %>><%= category.name %></option>
                                                    <% }); %>
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <label for="categoryOfferPercentage">Offer Percentage</label>
                                                <input type="number" class="form-control" name="categoryOfferPercentage" value="<%= offer.categoryOfferPercentage %>" min="5" max="90" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="startDate">Start Date</label>
                                                <input type="date" class="form-control" name="startDate" value="<%= new Date(offer.startDate).toISOString().split('T')[0] %>" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="endDate">End Date</label>
                                                <input type="date" class="form-control" name="endDate" value="<%= new Date(offer.endDate).toISOString().split('T')[0] %>" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="currentStatus">Current Status</label>
                                                <select class="form-control" name="currentStatus">
                                                    <option value="true" <%= offer.currentStatus ? 'selected' : '' %>>Active</option>
                                                    <option value="false" <%= !offer.currentStatus ? 'selected' : '' %>>Inactive</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            <button type="submit" class="btn btn-primary">Save changes</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- New Category Offer Modal -->
<div class="modal fade" id="newCategoryOfferModal" tabindex="-1" role="dialog" aria-labelledby="newCategoryOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newCategoryOfferModalLabel">Add New Category Offer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="newCategoryOfferForm" action="/admin/category-offers" method="POST">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="categoryId">Category</label>
                        <select class="form-control" name="categoryId" required>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="categoryOfferPercentage">Offer Percentage</label>
                        <input type="number" class="form-control" name="categoryOfferPercentage" min="5" max="90" required>
                    </div>
                    <div class="form-group">
                        <label for="startDate">Start Date</label>
                        <input type="date" class="form-control" name="startDate" id="startDate" required>
                    </div>
                    <div class="form-group">
                        <label for="endDate">End Date</label>
                        <input type="date" class="form-control" name="endDate" id="endDate" required>
                    </div>
                    <div class="form-group">
                        <label for="currentStatus">Current Status</label>
                        <select class="form-control" name="currentStatus">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Category Offer</button>
                </div>
            </form>
        </div>
    </div>
</div>

<%- include('../partials/footer.ejs') %>

<!-- Include Bootstrap JavaScript and CSS files -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- Include SweetAlert library -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.all.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.min.css" rel="stylesheet">

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const startDateInput = document.getElementById('startDate');
        const endDateInput = document.getElementById('endDate');
        
        const today = new Date().toISOString().split('T')[0];
        startDateInput.value = today;
        startDateInput.min = today;

        startDateInput.addEventListener('change', function() {
            endDateInput.min = this.value;
        });
    });

    document.querySelectorAll('.delete-category-offer-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            const offerId = this.getAttribute('data-offer-id');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/category-offers/delete/${offerId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            Swal.fire(
                                'Deleted!',
                                data.message,
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire(
                            'Error!',
                            'There was an error deleting the category offer.',
                            'error'
                        );
                    });
                }
            });
        });
    });

    document.querySelectorAll('[id^="editCategoryOfferForm"]').forEach(form => {
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(this);
            const offerId = this.action.split('/').pop();

            fetch(`/admin/category-offers/edit/${offerId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(Object.fromEntries(formData))
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Category offer updated successfully.') {
                    Swal.fire(
                        'Updated!',
                        data.message,
                        'success'
                    ).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire(
                        'Error!',
                        data.message,
                        'error'
                    );
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire(
                    'Error!',
                    'There was an error updating the category offer.',
                    'error'
                );
            });
        });
    });

    document.getElementById('newCategoryOfferForm').addEventListener('submit', function(event) {
        event.preventDefault();
        const formData = new FormData(this);

        fetch('/admin/category-offers', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(Object.fromEntries(formData))
        })
        .then(response => response.json())
        .then(data => {
            if (data.message === 'Category offer created successfully.') {
                Swal.fire(
                    'Created!',
                    data.message,
                    'success'
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire(
                    'Error!',
                    data.message,
                    'error'
                );
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire(
                'Error!',
                'There was an error creating the category offer.',
                'error'
            );
        });
    });
</script>
